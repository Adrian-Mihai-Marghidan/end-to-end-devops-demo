services:
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "3000:3000"
    restart: unless-stopped
    environment:
      DB_HOST: db
      DB_PORT: "5432"
      DB_USER: appuser
      DB_PASSWORD: apppass
      DB_NAME: appdb
    depends_on:
      - db

  web:
    image: nginx:alpine
    container_name: web
    depends_on:
      - backend
    ports:
      - "8081:80"
    volumes:
      - ../frontend:/usr/share/nginx/html:ro
      - ./nginx/nginx.config:/etc/nginx/conf.d/default.conf:ro

  db:
    image: postgres:16-alpine
    container_name: db
    environment:
      POSTGRES_USER: appuser
      POSTGRES_PASSWORD: apppass
      POSTGRES_DB: appdb
    volumes:
      - pgdata:/var/lib/postgresql/data

  prometheus:
    image: prom/prometheus:v2.55.1
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prom_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    restart: unless-stopped
    depends_on:
      - backend

  grafana:
    image: grafana/grafana:11.2.0
    container_name: grafana
    ports:
      - "3001:3000"          # host:container (avoid clashing with backend 3000)
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    restart: unless-stopped
    depends_on:
      - prometheus

volumes:
  pgdata:
  prom_data:
  grafana_data: