version: "3.9"

# Overlay for BLUE/GREEN. We disable the single 'web' and 'backend'
# from compose.base.yml and add color-specific stacks:
#   web-blue  -> proxies to backend-blue  (network: net-blue)  -> :8081
#   web-green -> proxies to backend-green (network: net-green) -> :8082

services:
  # Disable singletons from base so they don't clash
  backend:
    profiles: ["_disabled"]
  web:
    profiles: ["_disabled"]

  # =======================
  # BLUE (current live)
  # =======================
  backend-blue:
    container_name: backend-blue
    image: ghcr.io/${REPO_LC:-adrian-mihai-marghidan/end-to-end-devops-demo}/backend:${TAG_BLUE:-latest}
    environment:
      DB_HOST: db
      DB_PORT: "5432"
      DB_USER: appuser
      DB_PASSWORD: apppass
      DB_NAME: appdb
    depends_on:
      db:
        condition: service_started
    networks:
      net-blue:
        aliases: [backend]   # web-blue reaches http://backend:3000
      default: {}            # talk to db/prometheus/grafana on default
    expose:
      - "3000"
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:3000/health"]
      interval: 5s
      timeout: 2s
      retries: 30
    restart: unless-stopped

  web-blue:
    container_name: web-blue
    image: ghcr.io/${REPO_LC:-adrian-mihai-marghidan/end-to-end-devops-demo}/web:${TAG_BLUE:-latest}
    depends_on:
      backend-blue:
        condition: service_healthy
    networks:
      net-blue: {}
      default: {}
    ports:
      - "8081:80"     # public BLUE entrypoint
    restart: unless-stopped

  # =======================
  # GREEN (candidate)
  # =======================
  backend-green:
    container_name: backend-green
    image: ghcr.io/${REPO_LC:-adrian-mihai-marghidan/end-to-end-devops-demo}/backend:${TAG_GREEN:-latest}
    environment:
      DB_HOST: db
      DB_PORT: "5432"
      DB_USER: appuser
      DB_PASSWORD: apppass
      DB_NAME: appdb
    depends_on:
      db:
        condition: service_started
    networks:
      net-green:
        aliases: [backend]   # web-green reaches http://backend:3000
      default: {}
    expose:
      - "3000"
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:3000/health"]
      interval: 5s
      timeout: 2s
      retries: 30
    restart: unless-stopped

  web-green:
    container_name: web-green
    image: ghcr.io/${REPO_LC:-adrian-mihai-marghidan/end-to-end-devops-demo}/web:${TAG_GREEN:-latest}
    depends_on:
      backend-green:
        condition: service_healthy
    networks:
      net-green: {}
      default: {}
    ports:
      - "8082:80"     # public GREEN entrypoint (for pre-switch testing)
    restart: unless-stopped

networks:
  net-blue:
  net-green:
# 'default' network is created automatically by Compose; db/prometheus/grafana already use it
