# Blue/Green overlay used together with:
#   - infra/compose.base.yml  (db, prometheus, grafana, etc.)
#   - infra/docker-compose.prod.yml (prod-style web image, no bind mounts)
#
# This file:
#  - disables the single 'web' and 'backend' so they don't clash
#  - adds BLUE and GREEN copies of web+backend
#  - isolates each color on its own network so 'web' can proxy to 'backend'
#    via the SAME nginx config (proxy_pass http://backend:3000)
#  - NOTE: no host ports on web-* here; active port is set by
#          infra/bluegreen/blue-active.yml or green-active.yml

services:
  prometheus:
    image: prom/prometheus:v2.55.1
    container_name: prometheus
    command: ["--config.file=/etc/prometheus/prometheus.yml"]
    volumes:
      - ./prometheus/prometheus.bluegreen.yml:/etc/prometheus/prometheus.yml:ro
      - prom_data:/prometheus
    ports:
      - "9090:9090"
    depends_on:
      backend-blue:
        condition: service_started
      backend-green:
        condition: service_started
    restart: unless-stopped

  # Disable singleton services from base/prod in blue/green mode
  backend:
    profiles: ["_disabled"]
  web:
    profiles: ["_disabled"]

  # =======================
  # BLUE (current live)
  # =======================
  backend-blue:
    container_name: backend-blue
    image: ghcr.io/adrian-mihai-marghidan/end-to-end-devops-demo/backend:${TAG_BLUE:-latest}
    environment:
      DB_HOST: db
      DB_PORT: "5432"
      DB_USER: appuser
      DB_PASSWORD: apppass
      DB_NAME: appdb
    depends_on:
      db:
        condition: service_started
    networks:
      net-blue:
        aliases: [backend]
      default: {}
    expose:
      - "3000"
    restart: unless-stopped

  web-blue:
    container_name: web-blue
    image: ghcr.io/adrian-mihai-marghidan/end-to-end-devops-demo/web:${TAG_BLUE:-latest}
    depends_on:
      backend-blue:
        condition: service_started
    networks:
      net-blue: {}
      default: {}
    # no ports here — set by blue-active.yml or green-active.yml
    restart: unless-stopped

  # =======================
  # GREEN (candidate)
  # =======================
  backend-green:
    container_name: backend-green
    image: ghcr.io/adrian-mihai-marghidan/end-to-end-devops-demo/backend:${TAG_GREEN:-latest}
    environment:
      DB_HOST: db
      DB_PORT: "5432"
      DB_USER: appuser
      DB_PASSWORD: apppass
      DB_NAME: appdb
    depends_on:
      db:
        condition: service_started
    networks:
      net-green:
        aliases: [backend]
      default: {}
    expose:
      - "3000"
    restart: unless-stopped

  web-green:
    container_name: web-green
    image: ghcr.io/adrian-mihai-marghidan/end-to-end-devops-demo/web:${TAG_GREEN:-latest}
    depends_on:
      backend-green:
        condition: service_started
    networks:
      net-green: {}
      default: {}
    # no ports here — set by blue-active.yml or green-active.yml
    restart: unless-stopped

networks:
  net-blue:
  net-green:
# 'default' network exists from base compose; used to reach db/prom/grafana
